// API –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —É—Å–ø—ñ—à–Ω—É –æ–ø–ª–∞—Ç—É –≤ Telegram

export default async function handler(req, res) {
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method not allowed' });
  }

  const { orderReference } = req.body;

  // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó
  const registration = global.registrations?.[orderReference];

  if (!registration) {
    return res.status(404).json({ 
      success: false, 
      message: '–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—é –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ' 
    });
  }

  // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ Telegram –Ω–∞–ø—Ä—è–º—É
  const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
  const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID;

  if (!TELEGRAM_BOT_TOKEN || !TELEGRAM_CHAT_ID) {
    console.error('Telegram credentials not configured');
    return res.status(500).json({ 
      success: false, 
      message: 'Telegram –Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–π' 
    });
  }

  // –§–æ—Ä–º–∞—Ç—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
  const message = `
üí∞ *–ü–õ–ê–¢–ù–ê –†–ï–Ñ–°–¢–†–ê–¶–Ü–Ø –ù–ê –ü–û–î–Ü–Æ*

üéØ *–ü–æ–¥—ñ—è:* ${registration.eventTitle}
üë§ *–Ü–º'—è:* ${registration.userName}
üì± *–¢–µ–ª–µ—Ñ–æ–Ω:* ${registration.userPhone}
${registration.userEmail ? `üìß *Email:* ${registration.userEmail}` : ''}
üíµ *–°—É–º–∞:* ${registration.price}
‚úÖ *–°—Ç–∞—Ç—É—Å:* –û–ü–õ–ê–ß–ï–ù–û
üîë *–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è:* ${orderReference}

üìÖ *–î–∞—Ç–∞:* ${new Date().toLocaleString('uk-UA', { timeZone: 'Europe/Kiev' })}
`;

  try {
    // –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ Telegram
    const telegramUrl = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`;
    
    const response = await fetch(telegramUrl, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        chat_id: TELEGRAM_CHAT_ID,
        text: message,
        parse_mode: 'Markdown',
      }),
    });

    const data = await response.json();

    console.log('Telegram API response:', data);

    if (data.ok) {
      // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç—É—Å —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó
      if (global.registrations?.[orderReference]) {
        global.registrations[orderReference].status = 'paid';
        global.registrations[orderReference].notificationSent = true;
        global.registrations[orderReference].paidAt = new Date().toISOString();
      }

      return res.status(200).json({ 
        success: true, 
        message: '–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –≤ Telegram' 
      });
    } else {
      console.error('Telegram API error:', data);
      return res.status(500).json({ 
        success: false, 
        message: '–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –≤ Telegram',
        error: data
      });
    }
  } catch (error) {
    console.error('–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:', error);
    return res.status(500).json({ 
      success: false, 
      message: '–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è',
      error: error.message
    });
  }
}

